{"version":3,"sources":["components/songCard.jsx","containers/emoji.jsx","containers/text.jsx","containers/camera.jsx","components/selectors.jsx","components/header.jsx","containers/landingPage.jsx","routes.jsx","App.js","reportWebVitals.js","index.js"],"names":["SongCard","audioURL","backgroundUrl","id","useState","playPause","setPlayPause","Container","backgroundImg","PlayPauseButton","onClick","e","audio","document","getElementById","play","pause","handlePlayPause","src","type","color","size","icon","faPlayCircle","faPauseCircle","styled","div","button","happyGenres","angryGenres","fearGenres","sadGenres","neutralGenres","surprisedGenres","disgustGenres","Emoji","s","emotion","handleReanalyzeButton","movieList","setMovieList","songList","setSongList","useEffect","genreId","Math","floor","random","length","config","params","api_key","with_genres","page","headers","axios","get","then","res","data","results","catch","console","log","getMovies","search","tracks","getSongs","OuterContainer","EmotionDiv","Text","charAt","toUpperCase","slice","EmojiDiv","StyledLottie","animationData","happyAnimation","angerAnimation","fearAnimation","sadAnimation","neutralAnimation","surpriseAnimation","disgustAnimation","Button","MovieDiv","MovieHeader","MovieListDiv","map","backdrop_path","title","MovieImageCard","alt","MovieName","albumId","name","previewURL","span","Lottie","img","TextToEmo","props","setEmotion","showEmotion","setShowEmotion","showTextToEmo","setShowTextToEmo","message","setMessage","loading","setLoading","animationIn","animationOut","animationInDuration","animationOutDuration","isVisible","InputDiv","Input","className","placeholder","onChange","target","value","process","getEmotion","LoaderDiv","css","override","input","CameraToEmo","webcamRef","React","useRef","showCam","setShowCam","capture","useCallback","imageSrc","current","getScreenshot","body","picUrl","post","StyledAnimated","CaptureDiv","WebCamDiv","StyledWebCam","ref","screenshotFormat","mirrored","CaptureButton","faCamera","Animated","Webcam","Selectors","handleButtonCamera","handleButtonText","showCamera","showText","SelectorsDiv","active","StyledFontAwesomeIcon","faKeyboard","faArrowRight","faSmileWink","Camera","FontAwesomeIcon","Header","HeaderDiv","Logo","LandingPage","setShowCamera","setShowText","visibility","BaseRouter","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c3df0d56.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlayCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faPauseCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst SongCard = ({ audioURL, backgroundUrl, id }) => {\r\n  const [playPause, setPlayPause] = useState(true);\r\n\r\n  const handlePlayPause = () => {\r\n    var audio = document.getElementById(id);\r\n\r\n    if (playPause === true) {\r\n      audio.play();\r\n    } else {\r\n      audio.pause();\r\n    }\r\n\r\n    setPlayPause(!playPause);\r\n  };\r\n\r\n  return (\r\n    <Container backgroundImg={backgroundUrl}>\r\n      <PlayPauseButton onClick={(e) => handlePlayPause()}>\r\n        <audio id={id}>\r\n          <source src={audioURL} type=\"audio/mpeg\" />\r\n        </audio>\r\n        {playPause ? (\r\n          <FontAwesomeIcon color=\"#ffffff\" size=\"2x\" icon={faPlayCircle} />\r\n        ) : (\r\n          <FontAwesomeIcon color=\"#ffffff\" size=\"2x\" icon={faPauseCircle} />\r\n        )}\r\n      </PlayPauseButton>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SongCard;\r\n\r\n// styles\r\nconst Container = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  background-image: url(${({ backgroundImg }) => backgroundImg});\r\n  border: none;\r\n  border-radius: 5px;\r\n  box-shadow: 3px 5px 18px -2px rgba(0, 0, 0, 0.3);\r\n  height: 100px;\r\n  justify-content: center;\r\n  width: 70px;\r\n  margin: 10px;\r\n  -webkit-box-shadow: 3px 5px 18px -2px rgba(0, 0, 0, 0.3);\r\n  -moz-box-shadow: 3px 5px 18px -2px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst PlayPauseButton = styled.button`\r\n  align-items: center;\r\n  background-color: #111111;\r\n  border: none;\r\n  border-radius: 100%;\r\n  display: flex;\r\n  height: 20px;\r\n  justify-content: center;\r\n  width: 30px;\r\n  box-shadow: -2px 5px 16px 0px rgba(0, 0, 0, 0.47);\r\n  -webkit-box-shadow: -2px 5px 16px 0px rgba(0, 0, 0, 0.47);\r\n  -moz-box-shadow: -2px 5px 16px 0px rgba(0, 0, 0, 0.47);\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Lottie from \"lottie-react\";\r\nimport axios from \"axios\";\r\nimport sadAnimation from \"../lotties/sadness.json\";\r\nimport angerAnimation from \"../lotties/angry.json\";\r\nimport fearAnimation from \"../lotties/fear.json\";\r\nimport happyAnimation from \"../lotties/happy.json\";\r\nimport neutralAnimation from \"../lotties/neutral.json\";\r\nimport surpriseAnimation from \"../lotties/surprised.json\";\r\nimport disgustAnimation from \"../lotties/disgust.json\";\r\nimport SongCard from \"../components/songCard\";\r\n\r\nconst happyGenres = [\r\n  28, 12, 16, 35, 80, 99, 18, 10751, 14, 36, 9648, 10749, 878,\r\n];\r\nconst angryGenres = [35, 10751, 14];\r\nconst fearGenres = [1079, 10402, 14, 35, 16];\r\nconst sadGenres = [35, 18, 10751, 14, 9648, 10402];\r\nconst neutralGenres = [\r\n  28, 12, 16, 35, 80, 99, 18, 10751, 14, 36, 27, 10402, 9648, 878, 10770, 53,\r\n  10752, 37,\r\n];\r\nconst surprisedGenres = [\r\n  28, 12, 16, 35, 80, 99, 18, 10751, 14, 36, 27, 10402, 9648, 878, 10770, 53,\r\n  10752, 37,\r\n];\r\nconst disgustGenres = [\r\n  28, 12, 16, 35, 80, 99, 18, 10751, 14, 36, 9648, 10749, 878,\r\n];\r\n\r\nconst Emoji = ({ emotion, handleReanalyzeButton }) => {\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [songList, setSongList] = useState([]);\r\n\r\n  const getMovies = (emotion) => {\r\n    let genreId;\r\n\r\n    if (emotion === \"joy\" || emotion === \"Happy\")\r\n      genreId = happyGenres[Math.floor(Math.random() * happyGenres.length)];\r\n    else if (emotion === \"Angry\" || emotion === \"anger\")\r\n      genreId = angryGenres[Math.floor(Math.random() * angryGenres.length)];\r\n    else if (emotion === \"fear\" || emotion === \"Fearful\")\r\n      genreId = fearGenres[Math.floor(Math.random() * fearGenres.length)];\r\n    else if (emotion === \"sadness\" || emotion === \"Sad\")\r\n      genreId = sadGenres[Math.floor(Math.random() * sadGenres.length)];\r\n    else if (emotion === \"Neutral\" || emotion === \"neutral\")\r\n      genreId = neutralGenres[Math.floor(Math.random() * neutralGenres.length)];\r\n    else if (emotion === \"Surprised\")\r\n      genreId =\r\n        surprisedGenres[Math.floor(Math.random() * surprisedGenres.length)];\r\n    else if (emotion === \"Disgust\")\r\n      genreId = disgustGenres[Math.floor(Math.random() * disgustGenres.length)];\r\n\r\n    const config = {\r\n      params: {\r\n        api_key: \"676b7755848ac9f11c0eb0ff6af73f05\",\r\n        with_genres: `${genreId}`,\r\n        page: 1,\r\n      },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    axios\r\n      .get(\"https://api.themoviedb.org/3/discover/movie\", config)\r\n      .then((res) => {\r\n        setMovieList(res.data.results);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const getSongs = (emotion) => {\r\n    axios\r\n      .get(\r\n        `https://api.napster.com/v2.2/search?apikey=ZDIyOTdlNDktZWU5ZS00MGM2LTlhNTUtOWMyMDQ4NWU2OGMw&type=track&query= +${emotion} + Songs`\r\n      )\r\n      .then((res) => {\r\n        setSongList(res.data.search.data.tracks);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const capitalize = (s) => {\r\n    if (typeof s !== \"string\") return \"\";\r\n    return s.charAt(0).toUpperCase() + s.slice(1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMovies(emotion);\r\n    return () => {};\r\n  }, [emotion]);\r\n\r\n  useEffect(() => {\r\n    getSongs(emotion);\r\n    return () => {};\r\n  }, [movieList]);\r\n\r\n  return (\r\n    <OuterContainer>\r\n      <Container>\r\n        <EmotionDiv>\r\n          <Text>{capitalize(emotion)}</Text>\r\n          <EmojiDiv>\r\n            {emotion === \"joy\" || emotion === \"Happy\" ? (\r\n              <StyledLottie animationData={happyAnimation} />\r\n            ) : emotion === \"Angry\" || emotion === \"anger\" ? (\r\n              <StyledLottie animationData={angerAnimation} />\r\n            ) : emotion === \"fear\" || emotion === \"Fearful\" ? (\r\n              <StyledLottie animationData={fearAnimation} />\r\n            ) : emotion === \"sadness\" || emotion === \"Sad\" ? (\r\n              <StyledLottie animationData={sadAnimation} />\r\n            ) : emotion === \"Neutral\" || emotion === \"neutral\" ? (\r\n              <StyledLottie animationData={neutralAnimation} />\r\n            ) : emotion === \"Surprised\" ? (\r\n              <StyledLottie animationData={surpriseAnimation} />\r\n            ) : emotion === \"Disgust\" ? (\r\n              <StyledLottie animationData={disgustAnimation} />\r\n            ) : null}\r\n          </EmojiDiv>\r\n          <Button onClick={handleReanalyzeButton}>Re-Analyze</Button>\r\n        </EmotionDiv>\r\n        <MovieDiv>\r\n          <MovieHeader>Movies You Can Watch</MovieHeader>\r\n          <MovieListDiv>\r\n            {movieList.map(({ id, backdrop_path, title }) => (\r\n              <div key={id}>\r\n                <MovieImageCard\r\n                  src={`https://www.themoviedb.org/t/p/w94_and_h141_bestv2/${backdrop_path}`}\r\n                  alt=\"Poster\"\r\n                ></MovieImageCard>\r\n                <MovieName>{title}</MovieName>\r\n              </div>\r\n            ))}\r\n          </MovieListDiv>\r\n        </MovieDiv>\r\n        <MovieDiv>\r\n          <MovieHeader>Songs You Can Listen</MovieHeader>\r\n          <MovieListDiv>\r\n            {songList.map(({ albumId, id, name, previewURL }) => (\r\n              <div key={id}>\r\n                <SongCard\r\n                  backgroundUrl={`http://direct.rhapsody.com/imageserver/v2/albums/${albumId}/images/300x300.jpg`}\r\n                  audioURL={previewURL}\r\n                  id={id}\r\n                />\r\n                <MovieName>{name}</MovieName>\r\n              </div>\r\n            ))}\r\n          </MovieListDiv>\r\n        </MovieDiv>\r\n      </Container>\r\n    </OuterContainer>\r\n  );\r\n};\r\n\r\nexport default Emoji;\r\n\r\n// styles\r\nconst OuterContainer = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-family: \"Rubik\", sans-serif;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  padding-top: 150px;\r\n  padding-bottom: 60px;\r\n  width: 100%;\r\n  overflow-y: scroll;\r\n  position: absolute;\r\n  z-index: 2;\r\n  @media only screen and (max-width: 600px) {\r\n    height: auto;\r\n  }\r\n`;\r\n\r\nconst EmotionDiv = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  @media only screen and (max-width: 600px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-family: \"Rubik\", sans-serif;\r\n  justify-content: space-around;\r\n  width: 100%;\r\n`;\r\n\r\nconst EmojiDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  font-size: 40px;\r\n  @media only screen and (max-width: 600px) {\r\n    font-size: 22px;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-image: linear-gradient(\r\n    to right,\r\n    #2d5d7b,\r\n    #326587,\r\n    #386d93,\r\n    #3e769f,\r\n    #457eac\r\n  );\r\n  color: #ffffff;\r\n  padding: 10px;\r\n  transition: all 0.5s ease-in;\r\n  width: 30%;\r\n  :hover {\r\n    color: #111111;\r\n    background-image: linear-gradient(\r\n      to right,\r\n      #5586a4,\r\n      #5d90b2,\r\n      #649ac0,\r\n      #6da5ce,\r\n      #76afdd\r\n    );\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    width: 35%;\r\n  }\r\n`;\r\n\r\nconst StyledLottie = styled(Lottie)`\r\n  height: 150px;\r\n  @media only screen and (max-width: 600px) {\r\n    height: 200px;\r\n    margin-top: 40px;\r\n    margin-bottom: 40px;\r\n  }\r\n`;\r\n\r\nconst MovieHeader = styled.div`\r\n  font-family: \"Rubik\", sans-serif;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n  width: 60%;\r\n  @media only screen and (max-width: 600px) {\r\n    font-size: 22px;\r\n  }\r\n`;\r\n\r\nconst MovieDiv = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  @media only screen and (max-width: 600px) {\r\n    width: 500px;\r\n  }\r\n`;\r\n\r\nconst MovieListDiv = styled.div`\r\n  background-color: #ffffff;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  height: auto;\r\n  overflow-x: scroll;\r\n  overflow-y: hidden;\r\n  padding: 10px;\r\n  width: 60%;\r\n  ::-webkit-scrollbar {\r\n    width: 13px;\r\n    height: 13px;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background: linear-gradient(13deg, #ff7888 14%, #7585ff 64%);\r\n    border-radius: 10px;\r\n  }\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: linear-gradient(13deg, #9ca6ff 14%, #ffabb5 64%);\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    background: #ffffff;\r\n    border-radius: 10px;\r\n    box-shadow: inset 7px 10px 12px #f0f0f0;\r\n  }\r\n  box-shadow: 3px 5px 18px -2px rgba(0, 0, 0, 0.3) inset;\r\n  -webkit-box-shadow: 3px 5px 18px -2px rgba(0, 0, 0, 0.3) inset;\r\n  -moz-box-shadow: 3px 5px 18px -2px rgba(0, 0, 0, 0.3) inset;\r\n`;\r\n\r\nconst MovieImageCard = styled.img`\r\n  border: none;\r\n  border-radius: 5px;\r\n  box-shadow: 3px 5px 18px -2px rgba(0, 0, 0, 0.3);\r\n  height: 100px;\r\n  width: 70px;\r\n  margin: 10px;\r\n  -webkit-box-shadow: 3px 5px 18px -2px rgba(0, 0, 0, 0.3);\r\n  -moz-box-shadow: 3px 5px 18px -2px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst MovieName = styled.span`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  overflow-y: hidden;\r\n  font-family: \"Rubik\", sans-serif;\r\n  font-weight: bold;\r\n  font-size: 10px;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport { Animated } from \"react-animated-css\";\r\nimport { css } from \"@emotion/core\";\r\nimport GridLoader from \"react-spinners/GridLoader\";\r\n\r\nimport Emoji from \"./emoji\";\r\n\r\nconst TextToEmo = (props) => {\r\n  const [emotion, setEmotion] = useState(\"\");\r\n  const [showEmotion, setShowEmotion] = useState(false);\r\n  const [showTextToEmo, setShowTextToEmo] = useState(true);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getEmotion = (message) => {\r\n    setShowTextToEmo(false);\r\n    setLoading(true);\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_URL}/api/TextToEmo`, {\r\n        params: {\r\n          message: message,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setEmotion(res.data.emotion);\r\n        setLoading(false);\r\n        setShowEmotion(true);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const handleReanalyzeButton = (e) => {\r\n    setShowTextToEmo(true);\r\n    setShowEmotion(false);\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <OuterContainer>\r\n      <Animated\r\n        animationIn=\"zoomIn\"\r\n        animationOut=\"zoomOut\"\r\n        animationInDuration={500}\r\n        animationOutDuration={500}\r\n        isVisible={showTextToEmo}\r\n      >\r\n        <Container>\r\n          <Text>What's your mood?</Text>\r\n          <InputDiv>\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"floatingInput\"\r\n              placeholder={message}\r\n              onChange={(e) => {\r\n                setMessage(e.target.value);\r\n              }}\r\n            />\r\n          </InputDiv>\r\n          <Button className=\"btn\" onClick={(e) => getEmotion({ message })}>\r\n            Analyze\r\n          </Button>\r\n        </Container>\r\n      </Animated>\r\n      <Animated\r\n        animationIn=\"zoomIn\"\r\n        animationOut=\"zoomOut\"\r\n        animationInDuration={500}\r\n        animationOutDuration={500}\r\n        isVisible={showEmotion}\r\n      >\r\n        <Emoji\r\n          emotion={emotion}\r\n          handleReanalyzeButton={handleReanalyzeButton}\r\n        />\r\n      </Animated>\r\n\r\n      <Animated\r\n        animationIn=\"zoomIn\"\r\n        animationOut=\"zoomOut\"\r\n        animationInDuration={500}\r\n        animationOutDuration={500}\r\n        isVisible={loading}\r\n      >\r\n        <LoaderDiv>\r\n          <GridLoader\r\n            color=\"#1e6091\"\r\n            loading={loading}\r\n            css={override}\r\n            size={20}\r\n          />\r\n        </LoaderDiv>\r\n      </Animated>\r\n    </OuterContainer>\r\n  );\r\n};\r\n\r\nexport default TextToEmo;\r\n\r\n// styles\r\n\r\nconst Text = styled.span`\r\n  color: #343a40;\r\n  font-size: 35px;\r\n  @media only screen and (max-width: 600px) {\r\n    font-size: 22px;\r\n  }\r\n`;\r\n\r\nconst OuterContainer = styled.div`\r\n  z-index: 2;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-family: \"Rubik\", sans-serif;\r\n  justify-content: center;\r\n  height: 600px;\r\n  padding-top: 60px;\r\n  padding-bottom: 60px;\r\n  width: 100%;\r\n  position: absolute;\r\n`;\r\n\r\nconst InputDiv = styled.div`\r\n  align-items: center;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 10px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: none;\r\n  border-bottom-width: 2px;\r\n  border-bottom-style: solid;\r\n  border-bottom-color: #a2a7a3;\r\n  height: 100px;\r\n  transition: all 0.2s ease-in;\r\n  width: 80%;\r\n  box-shadow: -3px 7px 10px -3px rgba(0, 0, 0, 0.53);\r\n  -webkit-box-shadow: -3px 7px 10px -3px rgba(0, 0, 0, 0.53);\r\n  -moz-box-shadow: -3px 7px 10px -3px rgba(0, 0, 0, 0.53);\r\n\r\n  :focus {\r\n    border-bottom-width: 4px;\r\n    border-bottom-color: #1e6091;\r\n    outline: none;\r\n  }\r\n\r\n  @media only screen and (max-width: 600px) {\r\n    height: 60px;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-image: linear-gradient(\r\n    to right,\r\n    #2d5d7b,\r\n    #326587,\r\n    #386d93,\r\n    #3e769f,\r\n    #457eac\r\n  );\r\n\r\n  color: #ffffff;\r\n  font-weight: 500;\r\n  height: 50px;\r\n  width: 30%;\r\n  margin-top: 20px;\r\n  transition: all 0.5s ease-in;\r\n  :hover {\r\n    background-image: linear-gradient(\r\n      to right,\r\n      #5586a4,\r\n      #5d90b2,\r\n      #649ac0,\r\n      #6da5ce,\r\n      #76afdd\r\n    );\r\n  }\r\n`;\r\n\r\nconst LoaderDiv = styled.div`\r\n  padding-top: 200px;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\n// Loader Css\r\nconst override = css`\r\n  display: block;\r\n  border-color: #1e6091;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Webcam from \"react-webcam\";\r\nimport axios from \"axios\";\r\nimport { Animated } from \"react-animated-css\";\r\nimport { css } from \"@emotion/core\";\r\nimport GridLoader from \"react-spinners/GridLoader\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCamera } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport Emoji from \"./emoji\";\r\n\r\nconst CameraToEmo = (props) => {\r\n  const webcamRef = React.useRef(null);\r\n\r\n  const [showCam, setShowCam] = useState(true);\r\n  const [emotion, setEmotion] = useState(\"\");\r\n  const [showEmotion, setShowEmotion] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const capture = React.useCallback(() => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    setShowCam(false);\r\n    setLoading(true);\r\n\r\n    const body = { picUrl: imageSrc };\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_URL}/api/PicToEmo/`, body, config)\r\n      .then((res) => {\r\n        setEmotion(res.data.emotion);\r\n        setLoading(false);\r\n        setShowEmotion(true);\r\n      });\r\n  }, [webcamRef]);\r\n\r\n  const handleReanalyzeButton = (e) => {\r\n    setShowCam(true);\r\n    setShowEmotion(false);\r\n  };\r\n\r\n  return (\r\n    <OuterContainer>\r\n      <Animated\r\n        animationIn=\"zoomIn\"\r\n        animationOut=\"zoomOut\"\r\n        animationInDuration={500}\r\n        animationOutDuration={500}\r\n        isVisible={showEmotion}\r\n      >\r\n        <Emoji\r\n          emotion={emotion}\r\n          handleReanalyzeButton={handleReanalyzeButton}\r\n        />\r\n      </Animated>\r\n      <Animated\r\n        animationIn=\"zoomIn\"\r\n        animationOut=\"zoomOut\"\r\n        animationInDuration={500}\r\n        animationOutDuration={500}\r\n        isVisible={loading}\r\n      >\r\n        <LoaderDiv>\r\n          <GridLoader\r\n            color=\"#1e6091\"\r\n            loading={loading}\r\n            css={override}\r\n            size={20}\r\n          />\r\n        </LoaderDiv>\r\n      </Animated>\r\n      <StyledAnimated\r\n        animationIn=\"zoomIn\"\r\n        animationOut=\"zoomOut\"\r\n        animationInDuration={500}\r\n        animationOutDuration={500}\r\n        isVisible={showCam}\r\n      >\r\n        <Text>Show Us How You Feel</Text>\r\n        <CaptureDiv>\r\n          <WebCamDiv>\r\n            <StyledWebCam\r\n              audio={false}\r\n              ref={webcamRef}\r\n              screenshotFormat=\"image/jpeg\"\r\n              mirrored={true}\r\n            />\r\n          </WebCamDiv>\r\n          <CaptureButton onClick={capture}>\r\n            <FontAwesomeIcon size=\"2x\" icon={faCamera} />\r\n          </CaptureButton>\r\n        </CaptureDiv>\r\n      </StyledAnimated>\r\n    </OuterContainer>\r\n  );\r\n};\r\n\r\nexport default CameraToEmo;\r\n\r\n// styles\r\n\r\nconst OuterContainer = styled.div`\r\n  font-family: \"Rubik\", sans-serif;\r\n  height: auto;\r\n  margin-top: -200px;\r\n  overflow-x: hidden;\r\n  width: 100%;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 35px;\r\n  justify-content: center;\r\n  margin-top: -150px;\r\n  @media only screen and (max-width: 600px) {\r\n    font-size: 22px;\r\n  }\r\n`;\r\n\r\nconst StyledAnimated = styled(Animated)`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst CaptureButton = styled.button`\r\n  background-image: linear-gradient(\r\n    to right,\r\n    #2d5d7b,\r\n    #326587,\r\n    #386d93,\r\n    #3e769f,\r\n    #457eac\r\n  );\r\n  border: none;\r\n  border-radius: 50%;\r\n  color: #ffffff;\r\n  height: 100px;\r\n  width: 100px;\r\n  transition: all 0.5s ease-in;\r\n  :hover {\r\n    color: #111111;\r\n    background-image: linear-gradient(\r\n      to right,\r\n      #5586a4,\r\n      #5d90b2,\r\n      #649ac0,\r\n      #6da5ce,\r\n      #76afdd\r\n    );\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    height: 60px;\r\n    margin: 60px;\r\n    width: 60px;\r\n  }\r\n  box-shadow: -3px 7px 10px -3px rgba(0, 0, 0, 0.53);\r\n  -webkit-box-shadow: -3px 7px 10px -3px rgba(0, 0, 0, 0.53);\r\n  -moz-box-shadow: -3px 7px 10px -3px rgba(0, 0, 0, 0.53);\r\n`;\r\n\r\nconst LoaderDiv = styled.div`\r\n  padding-top: 200px;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst CaptureDiv = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  margin-top: 60px;\r\n  width: 100%;\r\n  @media only screen and (max-width: 600px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst WebCamDiv = styled.div`\r\n  align-items: center;\r\n  border-radius: 50%;\r\n  border-width: 10px;\r\n  border-color: #1e6091;\r\n  border-style: solid;\r\n  display: flex;\r\n  height: 400px;\r\n  justify-content: center;\r\n  width: 400px;\r\n  overflow: hidden;\r\n  @media only screen and (max-width: 600px) {\r\n    height: 300px;\r\n    width: 300px;\r\n  }\r\n  box-shadow: -3px 7px 10px -3px rgba(0, 0, 0, 0.53);\r\n  -webkit-box-shadow: -3px 7px 10px -3px rgba(0, 0, 0, 0.53);\r\n  -moz-box-shadow: -3px 7px 10px -3px rgba(0, 0, 0, 0.53);\r\n`;\r\n\r\nconst StyledWebCam = styled(Webcam)`\r\n  height: 700px;\r\n  width: 700px;\r\n  @media only screen and (max-width: 600px) {\r\n    height: 450px;\r\n    width: 450px;\r\n  }\r\n`;\r\n\r\n// Loader Css\r\nconst override = css`\r\n  display: block;\r\n  border-color: #1e6091;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faKeyboard } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faSmileWink } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCamera } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Selectors = ({\r\n  handleButtonCamera,\r\n  handleButtonText,\r\n  showCamera,\r\n  showText,\r\n}) => {\r\n  return (\r\n    <>\r\n      <SelectorsDiv>\r\n        <Text active={showText ? 1 : 0} onClick={handleButtonText}>\r\n          <StyledFontAwesomeIcon color=\"#ffffff\" size=\"2x\" icon={faKeyboard} />\r\n          <StyledFontAwesomeIcon\r\n            color=\"#ffffff\"\r\n            size=\"2x\"\r\n            icon={faArrowRight}\r\n          />\r\n          <StyledFontAwesomeIcon color=\"#ffffff\" size=\"2x\" icon={faSmileWink} />\r\n        </Text>\r\n        <Camera active={showCamera ? 1 : 0} onClick={handleButtonCamera}>\r\n          <StyledFontAwesomeIcon color=\"#ffffff\" size=\"2x\" icon={faCamera} />\r\n          <StyledFontAwesomeIcon\r\n            color=\"#ffffff\"\r\n            size=\"2x\"\r\n            icon={faArrowRight}\r\n          />\r\n          <StyledFontAwesomeIcon color=\"#ffffff\" size=\"2x\" icon={faSmileWink} />\r\n        </Camera>\r\n      </SelectorsDiv>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Selectors;\r\n\r\n// Styles\r\n\r\nconst SelectorsDiv = styled.div`\r\n  align-items: center;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-family: \"Rubik\", sans-serif;\r\n  height: auto;\r\n  justify-content: center;\r\n  width: 100%;\r\n  @media only screen and (max-width: 600px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Text = styled.button`\r\n  /* background-color: ${({ active }) => (active ? \"#fca311\" : \"#e5e5e5\")}; */\r\n\r\n  background-image: ${({ active }) =>\r\n    active\r\n      ? \"linear-gradient(to right, #2b193d, #533353, #7b516a, #a17382, #c5979d);\"\r\n      : \"linear-gradient(to right,#89c2d9,#7fbbd3,#75b3cd,#6bacc8,#61a5c2);\"};\r\n\r\n  border: none;\r\n  border-top-left-radius: 10px;\r\n  border-bottom-left-radius: 10px;\r\n  color: ${({ active }) => (active ? \"#ffffff\" : \"#353535\")};\r\n  transition: all 0.5s ease-in;\r\n  box-shadow: 3px 5px 14px -3px rgba(0, 0, 0, 0.5);\r\n  -webkit-box-shadow: 3px 5px 14px -3px rgba(0, 0, 0, 0.5);\r\n  -moz-box-shadow: 3px 5px 14px -3px rgba(0, 0, 0, 0.5);\r\n  @media only screen and (max-width: 600px) {\r\n  }\r\n`;\r\n\r\nconst Camera = styled.button`\r\n  background-image: ${({ active }) =>\r\n    active\r\n      ? \"linear-gradient(to right, #2b193d, #533353, #7b516a, #a17382, #c5979d);\"\r\n      : \"linear-gradient(to right,#89c2d9,#7fbbd3,#75b3cd,#6bacc8,#61a5c2);\"};\r\n  border: none;\r\n  border-top-right-radius: 10px;\r\n  border-bottom-right-radius: 10px;\r\n  color: ${({ active }) => (active ? \"#ffffff\" : \"#353535\")};\r\n  transition: all 0.5s ease-in;\r\n  box-shadow: 3px 5px 14px -3px rgba(0, 0, 0, 0.5);\r\n  -webkit-box-shadow: 3px 5px 14px -3px rgba(0, 0, 0, 0.5);\r\n  -moz-box-shadow: 3px 5px 14px -3px rgba(0, 0, 0, 0.5);\r\n\r\n  @media only screen and (max-width: 600px) {\r\n  }\r\n`;\r\n\r\nconst StyledFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  font-size: 20px;\r\n  margin: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Selectors from \"./selectors\";\r\n\r\nconst Header = ({\r\n  handleButtonCamera,\r\n  handleButtonText,\r\n  showCamera,\r\n  showText,\r\n}) => {\r\n  return (\r\n    <>\r\n      <HeaderDiv className=\"container-fluid\">\r\n        <Logo>Emotiooons</Logo>\r\n        <Selectors\r\n          showText={showText}\r\n          showCamera={showCamera}\r\n          handleButtonCamera={handleButtonCamera}\r\n          handleButtonText={handleButtonText}\r\n        />\r\n      </HeaderDiv>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n\r\n// Styles\r\nconst HeaderDiv = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-family: \"Rubik\", sans-serif;\r\n  height: 60px;\r\n  justify-content: flex-start;\r\n  padding-top: 20px;\r\n  padding-bottom: 10px;\r\n\r\n  @media only screen and (max-width: 600px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  color: #343a40;\r\n  display: flex;\r\n  font-size: 30px;\r\n  margin-bottom: 10px;\r\n  margin-top: 10px;\r\n  @media only screen and (max-width: 600px) {\r\n    font-size: 40px;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Animated } from \"react-animated-css\";\r\nimport styled from \"styled-components\";\r\n\r\nimport TextToEmo from \"./text\";\r\nimport CameraToEmo from \"./camera\";\r\nimport Header from \"../components/header\";\r\n\r\nfunction LandingPage() {\r\n  const [showCamera, setShowCamera] = useState(true);\r\n  const [showText, setShowText] = useState(false);\r\n\r\n  const handleButtonText = () => {\r\n    showText === false ? (\r\n      <>{(setShowText(true), setShowCamera(false))}</>\r\n    ) : (\r\n      <>{null}</>\r\n    );\r\n  };\r\n\r\n  const handleButtonCamera = () => {\r\n    showCamera === false ? (\r\n      <>{(setShowText(false), setShowCamera(true))}</>\r\n    ) : (\r\n      <>{null}</>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header\r\n        showText={showText}\r\n        showCamera={showCamera}\r\n        handleButtonCamera={handleButtonCamera}\r\n        handleButtonText={handleButtonText}\r\n      />\r\n      <Animated\r\n        animationIn=\"slideInLeft\"\r\n        animationOut=\"slideOutLeft\"\r\n        animationInDuration={1000}\r\n        animationOutDuration={1000}\r\n        isVisible={showText}\r\n      >\r\n        <TextToEmo />\r\n      </Animated>\r\n      <Animated\r\n        animationIn=\"slideInRight\"\r\n        animationOut=\"slideOutRight\"\r\n        animationInDuration={1000}\r\n        animationOutDuration={1000}\r\n        isVisible={showCamera}\r\n      >\r\n        <CameraToEmo visibility={showCamera ? 1 : 0} />\r\n      </Animated>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n\r\n// Styles\r\nconst Container = styled.div`\r\n  background-image: linear-gradient(\r\n    to right top,\r\n    #d16ba5,\r\n    #c777b9,\r\n    #ba83ca,\r\n    #aa8fd8,\r\n    #9a9ae1,\r\n    #8aa7ec,\r\n    #79b3f4,\r\n    #69bff8,\r\n    #52cffe,\r\n    #41dfff,\r\n    #46eefa,\r\n    #5ffbf1\r\n  );\r\n  overflow: hidden;\r\n  min-height: 100vh;\r\n`;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport LandingPage from \"./containers/landingPage\";\r\n\r\nfunction BaseRouter() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={LandingPage} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default BaseRouter;\r\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport BaseRouter from \"./routes\";\n\nfunction App() {\n  return (\n    <Router>\n      <BaseRouter />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}